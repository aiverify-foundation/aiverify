# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "v2 SAST - CodeQL"

on:
  push:
    branches: [ main, v2.x ]

  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ main, v2.x ]

  # trigger every Friday at 10:05pm (14:05 UTC)
  # schedule:
  #   - cron: "5 14 * * 5"

  workflow_dispatch:
    inputs:
      branch_to_test:
        description: 'Branch or tag to run test'
        required: true
        default: 'v2.x'
        type: string

jobs:
  analyze:

    permissions:
      # required for all workflows
      security-events: write
      # required to fetch internal or private CodeQL packs
      packages: read
      # only required for workflows in private repositories
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        language: [ python, javascript ]
        # CodeQL supports the following values keywords for 'language': 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift'
        # Use `c-cpp` to analyze code written in C, C++ or both
        # Use 'java-kotlin' to analyze code written in Java, Kotlin or both
        # Use 'javascript-typescript' to analyze code written in JavaScript, TypeScript or both
        # To learn more about changing the languages that are analyzed or customizing the build mode for your analysis,
        # see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/customizing-your-advanced-setup-for-code-scanning.
        # If you are analyzing a compiled language, you can modify the 'build-mode' for that language to customize how
        # your codebase is analyzed, see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/codeql-code-scanning-for-compiled-languages
    
    # Runner size impacts CodeQL analysis time. To learn more, please see:
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners
    # Consider using larger runners for possible analysis time improvements.
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}

    steps:
      - name: Set branch variable (pull_request)
        if: github.event_name == 'pull_request'
        run: |
          echo "BRANCH=${{ github.event.pull_request.head.ref }}" >> "$GITHUB_ENV"
          echo "PR_NUM=#${{ github.event.pull_request.number }}" >> "$GITHUB_ENV"

      - name: Set branch variable (workflow_dispatch)
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "BRANCH=${{ inputs.branch_to_test }}" >> "$GITHUB_ENV"
          echo "PR_NUM=#0" >> "$GITHUB_ENV"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH }}
          submodules: recursive

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.

          # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          # queries: security-extended,security-and-quality

      # If the analyze step fails for one of the languages you are analyzing with
      # "We were unable to automatically build your code", modify the matrix above
      # to set the build mode to "manual" for that language. Then modify this step
      # to build your code.
      # ℹ️ Command-line programs to run using the OS shell.
      # 📚 See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun
      # - if: matrix.build-mode == 'manual'
      #   shell: bash
      #   run: |
      #     echo 'If you are using a "manual" build mode for one or more of the' \
      #       'languages you are analyzing, replace this with the commands to build' \
      #       'your code, for example:'
      #     echo '  make bootstrap'
      #     echo '  make release'
      #     exit 1

      - name: Perform CodeQL analysis
        id: codeql_analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

      - name: Generate CodeQL analysis summary
        id: codeql_summary
        if: ${{ ! cancelled() }}
        run: |
          set +e
          source .ci/run-codeql-summ.sh
          exit_code=$?
          set -e        
          echo "CODEQL_SUMMARY=$CODEQL_SUMMARY" >> $GITHUB_ENV
          exit $exit_code
        env:
          GH_TOKEN: ${{ github.token }}

      # Send slack notification
      - name: Send slack notification
        if: ${{ ! cancelled() }}
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "workflow": "${{ github.repository }} - ${{ github.workflow }} - ${{ env.PR_NUM }}",
              "status": "SAST: ${{ steps.codeql_summary.outcome }}",
              "details": "${{ env.CODEQL_SUMMARY }}",
              "ref": "${{ github.server_url }}/${{ github.repository }}/security/code-scanning"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_CI }}
        
