apiVersion: v1
kind: Service
metadata:
  name: test-engine-worker
  namespace: aiverify
spec:
  selector:
    app: test-engine-worker
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-engine-worker
  namespace: aiverify
spec:
  replicas: 3
  selector:
    matchLabels:
      app: test-engine-worker
  template:
    metadata:
      labels:
        app: test-engine-worker
    spec:
      serviceAccountName: test-engine-sa
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: test-engine-worker
          image: aiverify-test-engine-worker-kube
          imagePullPolicy: Never
          env:
            - name: APIGW_URL
              value: "http://apigw.aiverify.svc.cluster.local:4000"
            - name: VALKEY_HOST_ADDRESS
              value: "valkey.aiverify.svc.cluster.local"
            - name: VALKEY_PORT
              value: "6379"
            - name: PIPELINE_BUILD
              value: "docker_build"
            - name: PIPELINE_EXECUTE
              value: "kubectl_run"
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
            type: Socket
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-engine-sa
  namespace: aiverify
--- 
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: test-engine-cluster-role
rules:
- apiGroups: [""]
  resources: ["pods", "pods/exec"]
  verbs: ["get", "list", "create", "delete", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: test-engine-binding
subjects:
- kind: ServiceAccount
  name: test-engine-sa
  namespace: aiverify
roleRef:
  kind: ClusterRole
  name: test-engine-cluster-role
  apiGroup: rbac.authorization.k8s.io
